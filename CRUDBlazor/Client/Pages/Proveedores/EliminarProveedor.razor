@page "/deleteproveedor/{id}"
@using System.Text.Json
@using CRUDBlazor.Shared.Proveedores
@inject HttpClient http
@inject NavigationManager NavigationManager
<h3>EliminarProveedor</h3>
<p>Estás seguro que quieres eliminar al siguiente proveedor?</p>

<div>
    <p><strong>Nombre Proveedor:</strong> @proveedor.nombreProveedor</p>
    <p><strong>Contacto:</strong> @proveedor.contacto</p>
  
    <p><strong>Dirección:</strong> @proveedor.direccion</p>
</div>
<button @onclick="(()=>DeleteProveedor(proveedor))" class="btn btn-danger">Eliminar Proveedor</button>

@code {
    [Parameter]
    public string id { get; set; }
    private ProveedorViewModel proveedor = new ProveedorViewModel();
    protected override async Task OnInitializedAsync()
    {

        var response = await http.GetAsync($"api/Proveedor/{id}");
        var content = await response.Content.ReadAsStringAsync();
        proveedor = JsonSerializer.Deserialize<ProveedorViewModel>(content);
    }
    private async Task DeleteProveedor(ProveedorViewModel proveedor)
    {
        var resultado = await http.DeleteAsync($"api/Proveedor/{proveedor.id}");
        if (resultado.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/proveedores");
        }
        else
        {
           //Pendiente poner mensaje error
        }
    }
}
