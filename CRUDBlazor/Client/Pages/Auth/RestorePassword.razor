@page "/restaurar/{userId}/{token}"
@using CRUDBlazor.Shared.Auth
@using System.Text.Json
@using System.Text
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>RestorePassword</h3>
<EditForm Model="RestorePass" >
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label>Contraseña temporal</label>
    <input type="password" class="form-control"  @bind-value="RestorePass.temporaryPassword" @bind-value:event="oninput"  />
    <label>Contraseña: </label>
    <input type="password" class="form-control" @bind-value="RestorePass.password" @bind-value:event="oninput" />
    @if (showAlert)
    {
        <div class="alert alert-danger" role="alert">
            @alertMessage
        </div>
    }
    <button @onclick="(()=>RestaurarPassMail(RestorePass))" class="btn btn-primary mt-2">Restaurar</button>
</EditForm>

@code {
    [Parameter]
    public string userId { get; set; }
    [Parameter]
    public string token { get; set; }
    public RestorePass RestorePass = new RestorePass();

    private bool showAlert = false;
    private string alertMessage = "";
    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync($"api/Auth/restorepassword/{userId}/{token}");
        Console.WriteLine("resultado de get" + response);

    }

    private async Task RestaurarPassMail(RestorePass restaurarPass)
    {
        restaurarPass.userId = userId;
        restaurarPass.token = token;
        // Asegúrate de que 'password' tiene un valor antes de esta línea
        var json = JsonSerializer.Serialize(restaurarPass);
        var data = new StringContent(json, Encoding.UTF8, "application/json");

        var response = await Http.PostAsync($"api/Auth/restaurarpassword/{userId}/{token}", data);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/administrarusuarios");
        }
        var content = await response.Content.ReadAsStringAsync();
     
    }




    private void ShowAlert(string message)
    {
        showAlert = true;
        alertMessage = message;
    }
}
